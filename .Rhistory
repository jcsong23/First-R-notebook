condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
#there is a difference so can do t test individually - would be 3
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Length), var = var(Petal.Length))
iris %>% levene_test(Petal.Length ~ Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>% levene_test(Petal.Length ~ Species)
iris %>% anova_test(Petal.Length ~ Species)
iris %>% welch_anova_test(Petal.Length ~ Species)
pwc = itis %>% tukey_hsd(Petal.Length ~ Species)
pwc = iris %>% tukey_hsd(Petal.Length ~ Species)
View(pwc)
pwc2 <- iris %>% games_howell_test(Petal.Length ~ Species)
View(pwc2)
data("jobsatisfaction")
View(jobsatisfaction)
data("jobsatisfaction", package = "datarium")
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
library(datarium)
data("jobsatisfaction", package = "datarium")
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
#there is a difference so can do t test individually - would be 3
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Length), var = var(Petal.Length))
iris %>% levene_test(Petal.Length ~ Species)
# if all assumptions are met, this is a regular anova, but homogeneity was violated so:
iris %>% anova_test(Petal.Length ~ Species)
#so use welch test, corrects for different variances
iris %>% welch_anova_test(Petal.Length ~ Species)
# high F: difference between groups is higher than difference within groups
# low p-value, so reject null; this values is really unlikely if between group variance was caused by chance. there is a between group difference
#POST HOC test
pwc = iris %>% tukey_hsd(Petal.Length ~ Species)
pwc2 <- iris %>% games_howell_test(Petal.Length ~ Species)
data("jobsatisfaction", package = "datarium")
install.packages(datarium)
data("jobsatisfaction", package = "datarium")
install.packages(datarium)
data("jobsatisfaction", package = "datarium")
data("jobsatisfaction", package = "datarium")
install.packages(datarium)
install.packages("datarium")
data("jobsatisfaction", package = "datarium")
View(jobsatisfaction)
jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(gender))
jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score))
ggqqplot(jobsatisfaction, "score", facet.by = "gender", "education_level")
jobsatisfaction %>%
ggplot(aes(x = gender, y = score, color = education_level)) +
geom_boxplot()
jobsatisfaction %>%
group_by(gender, education_level) %>%
identify_outliers(score)
jobsatisfaction %>%
group_by(gender, education_level) %>%
shapiro_test(score)
jobsatisfaction %>%
levene_test(score ~ gender*education_level)
iris %>% levene_test(Petal.Length ~ Species)
jobsatisfaction %>%
anova_test(score ~ gender*education_level)
jobsatisfaction %>%
levene_test(score ~ gender*education_level)
jobsatisfaction %>%
anova_test(score ~ gender*education_level)
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
#install.packages("rstatix", dependencies = TRUE)
#install.packages("ggpubr", dependencies = TRUE)
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
View(jobsatisfaction)
relatedness = read_csv("relatedness.csv")
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
library(emmeans)
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
relatedness = read_csv("relatedness.csv")
# levels of path length
relatedness = relatedness %>%
mutate(pathlength = as.factor(pathlength))
levels(relatedness$pathlength)
# trials per participant
relatedness %>%
group_by(ID) %>%
count()
#trials per path length
relatedness %>%
group_by(ID, pathlength) %>%
count()
# Mean time taken to make relatness judgemets as a functino of type of judgment and path length
mean_rt = relatedness %>%
group_by(Type, pathlength) %>%
summarise(rt = mean(RT))
#barplot
mean_rt %>%
ggplot(aes(x = pathlength, y = rt, group = Type, fill = Type)) +
geom_col(position = "dodge")+
theme_clean()+
scale_fill_wsj()
subject_rt = relatedness %>%
group_by(ID, pathlength, Type) %>%
summarise(rt = mean(RT)) %>%
mutate(logRT = log(rt))
# histogram
hist(subject_rt$rt)
hist(subject_rt$logRT)
#check outliers
outliers = subject_rt %>%
group_by(pathlength, Type) %>%
identify_outliers(logRT)
#check normality
subject_rt = subject_rt %>% ungroup()
subject_rt %>%
group_by(pathlength, Type) %>%
shapiro_test(logRT)
ggqqplot(subject_rt, "logRT", ggtheme = theme_bw()) +
facet_grid(pathlength ~ Type, labeller = "label_both")
anova_test(data = subject_rt, dv = logRT, wid = ID, within = c(pathlength, Type))
rm.aov = anova_test(
data = subject_rt, dv = logRT, wid = ID, within = c(pathlength, Type))
get_anova_table(rm.aov) # there are significant interactions!
#let's look at the effect of Type at each level of path length
subject_rt %>%
group_by(Type) %>%
anova_test(dv = logRT, wid = ID, within = pathlength) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
# there are simple effects so need to look at pairwise t tests
pwt = subject_rt %>%
group_by(Type) %>%
pairwise_t_test(logRT ~ pathlength, paired = TRUE, p.adjust.method = "bonferroni")
View(relatedness)
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
library(emmeans)
relatedness = read_csv("relatedness.csv")
# levels of path length
relatedness = relatedness %>%
mutate(pathlength = as.factor(pathlength))
levels(relatedness$pathlength)
# trials per participant
relatedness %>%
group_by(ID) %>%
count()
#trials per path length
relatedness %>%
group_by(ID, pathlength) %>%
count()
# Mean time taken to make relatness judgemets as a functino of type of judgment and path length
mean_rt = relatedness %>%
group_by(Type, pathlength) %>%
summarise(rt = mean(RT))
#barplot
mean_rt %>%
ggplot(aes(x = pathlength, y = rt, group = Type, fill = Type)) +
geom_col(position = "dodge")+
theme_clean()+
scale_fill_wsj()
subject_rt = relatedness %>%
group_by(ID, pathlength, Type) %>%
summarise(rt = mean(RT)) %>%
mutate(logRT = log(rt))
# histogram
hist(subject_rt$rt)
hist(subject_rt$logRT)
#check outliers
outliers = subject_rt %>%
group_by(pathlength, Type) %>%
identify_outliers(logRT)
#check normality
subject_rt = subject_rt %>% ungroup()
subject_rt %>%
group_by(pathlength, Type) %>%
shapiro_test(logRT)
ggqqplot(subject_rt, "logRT", ggtheme = theme_bw()) +
facet_grid(pathlength ~ Type, labeller = "label_both")
anova_test(data = subject_rt, dv = logRT, wid = ID, within = c(pathlength, Type))
rm.aov = anova_test(
data = subject_rt, dv = logRT, wid = ID, within = c(pathlength, Type))
get_anova_table(rm.aov) # there are significant interactions!
#let's look at the effect of Type at each level of path length
subject_rt %>%
group_by(Type) %>%
anova_test(dv = logRT, wid = ID, within = pathlength) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
# there are simple effects so need to look at pairwise t tests
pwt = subject_rt %>%
group_by(Type) %>%
pairwise_t_test(logRT ~ pathlength, paired = TRUE, p.adjust.method = "bonferroni")
install.packages("datarium")
data("jobsatisfaction", package = "datarium")
View(jobsatisfaction)
jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score))
jobsatisfaction %>%
ggplot(aes(x = gender, y = score, color = education_level)) +
geom_boxplot()
# now check assumptions: outliers, normality, homogeneity
jobsatisfaction %>%
group_by(gender, education_level) %>%
shapiro_test(score)
# p > 0.05, so high enough, yes distribution is significantly different
jobsatisfaction %>%
levene_test(score ~ gender*education_level)
# satisfied based on dfs?
jobsatisfaction %>%
anova_test(score ~ gender*education_level)
# find simple effects because we found significant effects
model <-lm(score ~ gender * education_level, data = jobsatisfaction)
# to get right degrees of freedom for anova test
jobsatisfaction %>%
group_by(gender) %>%
anova_test(score ~ education_level, error = model)
# use emmeans bc found simple effects:
jobsatisfaction %>%
group_by(gender) %>%
emmeans_test(score ~ education_level, p.adjust.method = "bonferroni")
# what about a non-significant interaction? then we evaluate the main effects and see which produced significant. then you decompose main effects
# only for 2 levels for independent variables
jobsatisfaction %>%
pairwise_t_test(score ~ education_level, p.adjust.method = "bonferroni")
install.packages("datarium")
data("jobsatisfaction", package = "datarium")
View(jobsatisfaction)
jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score))
jobsatisfaction %>%
ggplot(aes(x = gender, y = score, color = education_level)) +
geom_boxplot()
jobsatisfaction %>%
ggplot(aes(x = gender, y = score, color = education_level)) +
geom_bargraph()
jobsatisfaction %>%
ggplot(aes(x = education_level, y = mean_score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
theme_clean()+
scale_fill_wsj()
jobsatisfaction %>%
ggplot(aes(x = education_level, y = score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
theme_clean()+
scale_fill_wsj()
mean_scores = jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score))
View(mean_scores)
mean_scores %>%
ggplot(aes(x = education_level, y = score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd),
ymax = mean+sd), width = .25, postiion = position_doge(width = 0.9))+
mean_scores %>%
ggplot(aes(x = education_level, y = score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, postiion = position_doge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_doge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25)+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.5))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean,
ymax = mean), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
mean_scores = jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score)) %>%
left_join(counts) %>%
mutate(SE = sd/n, ymin = mean - 1.96*SE,
ymax = mean + 1.96*SE)
install.packages("datarium")
data("jobsatisfaction", package = "datarium")
jobsatisfaction %>%
group_by(gender, education_level) %>%
ggplot(aes(x = education_level, y = score, group = gender, fill = gender)) +
geom_col(position = "dodge")+
theme_clean()+
scale_fill_wsj()
mean_scores = jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score))
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
theme_clean()+
scale_fill_wsj()
# confidence intervals
counts = jobsatisfaction %>%
group_by(gender, education_level) %>%
count()
mean_scores = jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score)) %>%
left_join(counts) %>%
mutate(SE = sd/n, ymin = mean - 1.96*SE,
ymax = mean + 1.96*SE)
mean_scores = jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score)) %>%
left_join(counts) %>%
mutate(SE = sd/n, ymin = mean - 1.96*SE,
ymax = mean + 1.96*SE)
mean_scores %>%
ggplot(aes(x = education_level, y = mean, group = gender, fill = gender)) +
geom_col(position = "dodge")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd), width = .25, position = position_dodge(width = 0.9))+
geom_point(data = jobsatisfaction, aes(x = education_level, y = score, group = gender),
position = position_jitterdodge(), alpha = 0.3)+
theme_clean()+
scale_fill_wsj()
