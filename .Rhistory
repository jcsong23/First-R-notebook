geom_col(fill = "gray", color = "black")
mean_condition %>%
ggplot(aes(x = pathlength, y = mean_rt)) +
geom_col()
View(mean_condition)
mean_condition %>%
ggplot(aes(x = pathlength, y = mean_rt)) +
geom_col()
mean_condition %>%
ggplot(aes(x = pathlength, y = mean_rt)) +
geom_col() +
theme_few() +
xlab("Path length") +
ylab("Mean RT") +
ggtitle ("Barplot of Mean RT")
mean_condition %>%
ggplot(aes(x = pathlength, y = mean_rt)) +
aes(fill = Type)
mean_condition %>%
ggplot(aes(x = pathlength, y = mean_rt)) +
aes(fill = Type) +
geom_col() +
theme_few() +
xlab("Path length") +
ylab("Mean RT") +
ggtitle ("Barplot of Mean RT")
mean_condition %>%
ggplot(aes(x = pathlength, y = mean_rt)) +
aes(fill = Type) +
geom_col(position = "dodge") +
theme_few() +
xlab("Path length") +
ylab("Mean RT") +
ggtitle ("Barplot of Mean RT")
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
View(exp1)
View(condition_data)
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "h")
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "h")
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "H")
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "H")
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
#using means data
ggplot(aes(x = shape, y = RT)) +
aes(fill = weight) +
geom_col(position = "dodge") +
theme_fivethirtyeight() +
xlab("Shape") +
ylab("RT") +
ggtitle ("Barplot of RT")
means %>%
ggplot(aes(x = shape, y = RT)) +
aes(fill = weight) +
geom_col(position = "dodge") +
theme_fivethirtyeight() +
xlab("Shape") +
ylab("RT") +
ggtitle ("Barplot of RT")
means %>%
ggplot(aes(x = shape, y = RT, fill = weight)) +
geom_col(position = "dodge") +
theme_fivethirtyeight() +
xlab("Shape") +
ylab("RT") +
ggtitle ("Barplot of RT")
means %>%
ggplot(aes(x = shape, y = RT, fill = weight)) +
geom_col(position = "dodge") +
theme_fivethirtyeight() +
xlab("Shape") +
ylab("RT") +
ggtitle ("Barplot of RT")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = RT, fill = weight)) +
geom_col(position = "dodge") +
theme_fivethirtyeight() +
xlab("Shape") +
ylab("RT") +
ggtitle ("Barplot of RT")
means %>%
ggplot(aes(x = shape, y = RT, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
df = df %>%
mutate(RT_seconds = RT/1000, accuracy = ifelse(pathlength==1 & Type == "Related", 1, 0))
df = df %>%
mutate(RT_seconds = RT/1000)
df = df %>%
mutate(RT_seconds == RT/1000, accuracy = ifelse(pathlength==1 & Type == "Related", 1, 0))
df = df %>%
mutate(pathlength = as.factor(pathlength),
Type = as.factor(Type))
df %>% pull (Type)
df %>% pull (RT)
levels (df %>% pull (pathlength))
df %>% pull (ID) %>% unique()
unique(c(1,3,3,4,5,5,1,2))
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
library(tidyverse)
library(ggthemes)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
View(exp1)
View(condition_data)
View(df)
View(df)
View(mean_condition)
df_wide1 = mean_condition %>%
pivot_wider(names_from = pathlength, values_from = mean_rt)
df_wide2 = mean_condition %>%
pivot_wider(names_from = Type, values_from = mean_rt)
View(df_wide1)
View(df_wide2)
View(mean_condition)
View(means)
exp1_wide = means %>%
pivot_wider(names_from = weight, values_from = mean_rt)
View(exp1_wide)
exp1_wide = means %>%
select(weight, shape, mean_rt) %>%
# selects only these columns to deal with
pivot_wider(names_from = weight, values_from = mean_rt)
View(condition_data)
condition_data %>%
group_by(subject, shape, weight) %>%
count()
condition_data %>%
group_by(subject, shape, weight) %>%
summarise(mean_rt = mean(rt))
subject_wide = mean_subject %>%
pivot_wider(names_from = c(weight, shape), values_from = mean_rt)
subject_wide = mean_subject %>%
pivot_wider(names_from = weight, values_from = mean_rt)
mean_subject = condition_data %>%
group_by(subject, shape, weight) %>%
summarise(mean_rt = mean(rt))
subject_wide = mean_subject %>%
pivot_wider(names_from = weight, values_from = mean_rt)
View(mean_subject)
View(subject_wide)
subject_wide = mean_subject %>%
pivot_wider(names_from = c(shape, weight), values_from = mean_rt)
subject_wide = mean_subject %>%
pivot_wider(names_from = c(shape, weight), values_from = mean_rt)
t.test(subject_wide$Heavy_Normal, subjectwide$Heavy_Smashed)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed)
View(subject_wide)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed)
subject_wide = mean_subject %>%
pivot_wider(names_from = c(weight, shape), values_from = mean_rt)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
x1_bar = mean(subject_wide$Heavy_Normal)
x1_bar = mean(subject_wide$Heavy_Normal)
x2_bar = subject_wide %>% pull(Heavy_Smashed) %>% mean()
s1 = sd(subject_wide$Heavy_Normal)
s2 = subject_wide %>% pull(Heavy_Smashed) %>% sd()
n1 = nrow(subject_wide)
n2 = subject_wide %>% pull(Heavy_Smashed) %>% length()
x1_bar = mean(subject_wide$Heavy_Normal)
x2_bar = subject_wide %>% pull(Heavy_Smashed) %>% mean()
s1 = sd(subject_wide$Heavy_Normal)
s2 = subject_wide %>% pull(Heavy_Smashed) %>% sd()
n1 = nrow(subject_wide)
n2 = subject_wide %>% pull(Heavy_Smashed) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/s1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
#does t test vary as a function of shape?
#paired t test because both come samples come from subject
x1_bar = mean(subject_wide$Heavy_Normal)
x2_bar = subject_wide %>% pull(Heavy_Smashed) %>% mean()
s1 = sd(subject_wide$Heavy_Normal)
s2 = subject_wide %>% pull(Heavy_Smashed) %>% sd()
n1 = nrow(subject_wide)
n2 = subject_wide %>% pull(Heavy_Smashed) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
library(tidyverse)
library(ggthemes)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed, var.equal = TRUE)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
#does t test vary as a function of shape?
#paired t test because both come samples come from subject
x = s1*s2/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed, var.equal = TRUE)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
#does t test vary as a function of shape?
#paired t test because both come samples come from subject
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed,
var.equal = TRUE
paired = TRUE)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed,
var.equal = TRUE, paired = TRUE)
install.packages("rstatix")
install.packages("ggpubr")
library(rstatix)
library(ggpubr)
View(subject_wide)
subject_wide = subject_wide %>%
mutate(diff = Heavy_Normal - Heavy_Smashed)
3120.833-2365.5
subject_wide = subject_wide %>% ungroup()
outliers = subject_wide %>% identify_outliers(diff)
View(outliers)
outlier_subs = outliers %>% pull(subject)
subject_wide_new = subjcet_wide %>% filter(!subject %in% outlier_subs)
subject_wide_new = subject_wide %>% filter(!subject %in% outlier_subs)
View(subject_wide_new)
View(subject_wide)
outlier_subs = outliers %>% pull(subject)
outlier_subs = outliers %>% pull(subject)
library(rstatix)
library(ggpubr)
subject_wide = subject_wide %>%
mutate(diff = Heavy_Normal - Heavy_Smashed)
subject_wide = subject_wide %>% ungroup()
# for some reason rstatix always groups, so need to ungroup
outliers = subject_wide %>% identify_outliers(diff)
outlier_subs = outliers %>% pull(subject)
subject_wide_new = subject_wide %>% filter(!subject %in% outlier_subs)
hist(subject_wide$diff)
ggqqplot(subject_wide, "diff")
subject_wide %>% shapiro_test(diff)
hist(subject_wide_new$"diff")
ggqqplot(subject_wide_new, "diff")
subject_wide_new %>% shapire_test(diff)
subject_wide_new %>% shapiro_test(diff)
#t-test
t.test(subject_wide_new$diff, subject_wide_new$diff,
var.equal = TRUE, paired = TRUE)
#t-test
t.test(subject_wide_new$Heavy_Normal, subject_wide_new$Heav_Smashed,
var.equal = TRUE, paired = TRUE)
#t-test
t.test(subject_wide_new$Heavy_Normal, subject_wide_new$Heavy_Smashed,
var.equal = TRUE, paired = TRUE)
subject_wide = subject_wide %>%
mutate(diff2 = Light_Normal - Heavy_Smashed)
subject_wide = subject_wide %>% ungroup()
outliers2 = subject_wide %>% identify_outliers(diff2)
outlier_subs2 = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% outlier_subs2)
hist(subject_wide$diff2)
ggqqplot(subject_wide, "diff2")
subject_wide %>% shapiro_test(diff2)
hist(subject_wide_new2$"diff2")
ggqqplot(subject_wide_new2, "diff2")
# after taking out 12 outliers, it's much better
subject_wide_new2 %>% shapiro_test(diff2)
#now we can do t-test because it's non-significant
#t-test
t.test(subject_wide_new2$Light_Normal, subject_wide_new2$Heavy_Normal,
var.equal = TRUE, paired = TRUE)
View(outliers2)
subject_wide = subject_wide %>%
mutate(diff2 = Light_Normal - Heavy_Normal)
subject_wide = subject_wide %>% ungroup()
outliers2 = subject_wide %>% identify_outliers(diff2)
outlier_subs2 = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% outlier_subs2)
hist(subject_wide$diff2)
ggqqplot(subject_wide, "diff2")
subject_wide %>% shapiro_test(diff2)
hist(subject_wide_new2$"diff2")
ggqqplot(subject_wide_new2, "diff2")
# after taking out 12 outliers, it's much better
subject_wide_new2 %>% shapiro_test(diff2)
#now we can do t-test because it's non-significant
#t-test
t.test(subject_wide_new2$Light_Normal, subject_wide_new2$Heavy_Normal,
var.equal = TRUE, paired = TRUE)
subject_wide_new2 = subject_wide %>% filter(!subject %in% new_df)
new_df = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% new_df)
subject_wide = subject_wide %>%
mutate(diff2 = Light_Normal - Heavy_Normal)
subject_wide = subject_wide %>% ungroup()
outliers2 = subject_wide %>% identify_outliers(diff2)
new_df = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% new_df)
hist(subject_wide$diff2)
ggqqplot(subject_wide, "diff2")
subject_wide %>% shapiro_test(diff2)
hist(subject_wide_new2$"diff2")
ggqqplot(subject_wide_new2, "diff2")
# after taking out 12 outliers, it's much better
subject_wide_new2 %>% shapiro_test(diff2)
#now we can do t-test because it's non-significant
#t-test
t.test(subject_wide_new2$Light_Normal, subject_wide_new2$Heavy_Normal,
var.equal = TRUE, paired = TRUE)
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
#install.packages("rstatix", dependencies = TRUE)
#install.packages("ggpubr", dependencies = TRUE)
library(tidyverse)
library(ggthemes)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
View(subject_wide)
subject_long = subject_wide %>%
select(-c(diff, diff2)) %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Ligher_Smashed)
subject_long = subject_wide %>%
select(-c(diff, diff2)) %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Light_Smashed)
View(subject_long)
new_means = means %>%
select(weight, shape, mean_rt)
new_means_wide = new_means %>%
pivot_wider(names_from = c(weight, shape), values_from = mean_rt)
View(new_means_wide)
View(new_means)
subject_long = subject_wide %>%
select(-c(diff, diff2)) %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Light_Smashed)
new_means = means %>%
select(weight, shape, mean_rt)
new_means_wide = new_means %>%
pivot_wider(names_from = c(weight, shape), values_from = mean_rt)
new_means_long = new_means_wide %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Light_Smashed)
View(new_means_long)
new_means_long = new_means_long %>%
separate(conditon, into = c("weight","shape"))
new_means_long = new_means_long %>%
separate(condition, into = c("weight","shape"))
