t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
library(tidyverse)
library(ggthemes)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed, var.equal = TRUE)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
#does t test vary as a function of shape?
#paired t test because both come samples come from subject
x = s1*s2/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed, var.equal = TRUE)
mean_subject %>%
filter(weight=="Heavy") %>%
t.test(mean_rt ~ shape, data =.)
#does t test vary as a function of shape?
#paired t test because both come samples come from subject
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed,
var.equal = TRUE
paired = TRUE)
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed,
var.equal = TRUE, paired = TRUE)
install.packages("rstatix")
install.packages("ggpubr")
library(rstatix)
library(ggpubr)
View(subject_wide)
subject_wide = subject_wide %>%
mutate(diff = Heavy_Normal - Heavy_Smashed)
3120.833-2365.5
subject_wide = subject_wide %>% ungroup()
outliers = subject_wide %>% identify_outliers(diff)
View(outliers)
outlier_subs = outliers %>% pull(subject)
subject_wide_new = subjcet_wide %>% filter(!subject %in% outlier_subs)
subject_wide_new = subject_wide %>% filter(!subject %in% outlier_subs)
View(subject_wide_new)
View(subject_wide)
outlier_subs = outliers %>% pull(subject)
outlier_subs = outliers %>% pull(subject)
library(rstatix)
library(ggpubr)
subject_wide = subject_wide %>%
mutate(diff = Heavy_Normal - Heavy_Smashed)
subject_wide = subject_wide %>% ungroup()
# for some reason rstatix always groups, so need to ungroup
outliers = subject_wide %>% identify_outliers(diff)
outlier_subs = outliers %>% pull(subject)
subject_wide_new = subject_wide %>% filter(!subject %in% outlier_subs)
hist(subject_wide$diff)
ggqqplot(subject_wide, "diff")
subject_wide %>% shapiro_test(diff)
hist(subject_wide_new$"diff")
ggqqplot(subject_wide_new, "diff")
subject_wide_new %>% shapire_test(diff)
subject_wide_new %>% shapiro_test(diff)
#t-test
t.test(subject_wide_new$diff, subject_wide_new$diff,
var.equal = TRUE, paired = TRUE)
#t-test
t.test(subject_wide_new$Heavy_Normal, subject_wide_new$Heav_Smashed,
var.equal = TRUE, paired = TRUE)
#t-test
t.test(subject_wide_new$Heavy_Normal, subject_wide_new$Heavy_Smashed,
var.equal = TRUE, paired = TRUE)
subject_wide = subject_wide %>%
mutate(diff2 = Light_Normal - Heavy_Smashed)
subject_wide = subject_wide %>% ungroup()
outliers2 = subject_wide %>% identify_outliers(diff2)
outlier_subs2 = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% outlier_subs2)
hist(subject_wide$diff2)
ggqqplot(subject_wide, "diff2")
subject_wide %>% shapiro_test(diff2)
hist(subject_wide_new2$"diff2")
ggqqplot(subject_wide_new2, "diff2")
# after taking out 12 outliers, it's much better
subject_wide_new2 %>% shapiro_test(diff2)
#now we can do t-test because it's non-significant
#t-test
t.test(subject_wide_new2$Light_Normal, subject_wide_new2$Heavy_Normal,
var.equal = TRUE, paired = TRUE)
View(outliers2)
subject_wide = subject_wide %>%
mutate(diff2 = Light_Normal - Heavy_Normal)
subject_wide = subject_wide %>% ungroup()
outliers2 = subject_wide %>% identify_outliers(diff2)
outlier_subs2 = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% outlier_subs2)
hist(subject_wide$diff2)
ggqqplot(subject_wide, "diff2")
subject_wide %>% shapiro_test(diff2)
hist(subject_wide_new2$"diff2")
ggqqplot(subject_wide_new2, "diff2")
# after taking out 12 outliers, it's much better
subject_wide_new2 %>% shapiro_test(diff2)
#now we can do t-test because it's non-significant
#t-test
t.test(subject_wide_new2$Light_Normal, subject_wide_new2$Heavy_Normal,
var.equal = TRUE, paired = TRUE)
subject_wide_new2 = subject_wide %>% filter(!subject %in% new_df)
new_df = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% new_df)
subject_wide = subject_wide %>%
mutate(diff2 = Light_Normal - Heavy_Normal)
subject_wide = subject_wide %>% ungroup()
outliers2 = subject_wide %>% identify_outliers(diff2)
new_df = outliers2 %>% pull(subject)
subject_wide_new2 = subject_wide %>% filter(!subject %in% new_df)
hist(subject_wide$diff2)
ggqqplot(subject_wide, "diff2")
subject_wide %>% shapiro_test(diff2)
hist(subject_wide_new2$"diff2")
ggqqplot(subject_wide_new2, "diff2")
# after taking out 12 outliers, it's much better
subject_wide_new2 %>% shapiro_test(diff2)
#now we can do t-test because it's non-significant
#t-test
t.test(subject_wide_new2$Light_Normal, subject_wide_new2$Heavy_Normal,
var.equal = TRUE, paired = TRUE)
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
#install.packages("rstatix", dependencies = TRUE)
#install.packages("ggpubr", dependencies = TRUE)
library(tidyverse)
library(ggthemes)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
View(subject_wide)
subject_long = subject_wide %>%
select(-c(diff, diff2)) %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Ligher_Smashed)
subject_long = subject_wide %>%
select(-c(diff, diff2)) %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Light_Smashed)
View(subject_long)
new_means = means %>%
select(weight, shape, mean_rt)
new_means_wide = new_means %>%
pivot_wider(names_from = c(weight, shape), values_from = mean_rt)
View(new_means_wide)
View(new_means)
subject_long = subject_wide %>%
select(-c(diff, diff2)) %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Light_Smashed)
new_means = means %>%
select(weight, shape, mean_rt)
new_means_wide = new_means %>%
pivot_wider(names_from = c(weight, shape), values_from = mean_rt)
new_means_long = new_means_wide %>%
pivot_longer(names_to = "condition", cols = Heavy_Normal:Light_Smashed)
View(new_means_long)
new_means_long = new_means_long %>%
separate(conditon, into = c("weight","shape"))
new_means_long = new_means_long %>%
separate(condition, into = c("weight","shape"))
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
#install.packages("rstatix", dependencies = TRUE)
#install.packages("ggpubr", dependencies = TRUE)
library(tidyverse)
library(ggthemes)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(x = Species, y = Petal.length) + ggboxplot()
iris %>%
ggplot(x = Species, y = Petal.length) + geom_boxplot()
iris %>%
ggplot(x = Species, y = Petal.length)) + geom_boxplot()
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(x = Species, y = Petal.length)) + geom_boxplot()
iris %>%
ggplot(x = Species, y = Petal.length) + geom_boxplot()
iris %>%
iris %>%
ggplot(aes(x = Species, y = Petal.length)) + geom_boxplot()
View(iris)
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Length), var = var(Petal.Length))
0.173664^2
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Length), var = var(Petal.Length))
iris %>% levene_test(Petal.Length ~ Species)
View(subject_wide)
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
#install.packages("tidyverse",dependencies = TRUE)
#install.packages("ggthemes",dependencies = TRUE)
#install.packages("rstatix", dependencies = TRUE)
#install.packages("ggpubr", dependencies = TRUE)
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
exp1 = read_csv("exp1.csv")
nrow(exp1)
ncol(exp1)
colnames(exp1)
hist(exp1$rt)
condition_data = exp1 %>%
select(subject, rt, typeoftrial, trialcondition, correct) %>%
filter(typeoftrial=="picture" &
trialcondition %in%
c("Heavy_Normal","Light_Smashed","Heavy_Smashed","Light_Normal"))
condition_data = condition_data %>%
separate(trialcondition, into = c("weight", "shape"), sep = "_")
means = condition_data %>%
group_by(weight, shape) %>%
summarise(mean_rt = mean(rt),
sd_rt = sd(rt),
mean_acc = mean(correct))
means %>%
ggplot(aes(x = shape, y = sd_rt, fill = weight)) +
geom_col(position = "dodge") +
labs(x = "Shape", y = "RT", title = "Barplot of RT")
exp1 %>%
select(dataset, correct, typeoftrial) %>%
filter(correct==1 & typeoftrial=="picture")
library(ggplot2)
library(ggthemes)
condition_data %>%
filter(rt<25000) %>%
ggplot(aes(x=rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("RT (in milliseconds)") +
ylab("Count") +
ggtitle("Histogram of RT")
condition_data %>%
group_by(subject, trialcondition) %>%
count()
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
#there is a difference so can do t test individually - would be 3
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Length), var = var(Petal.Length))
iris %>% levene_test(Petal.Length ~ Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>% levene_test(Petal.Length ~ Species)
iris %>% anova_test(Petal.Length ~ Species)
iris %>% welch_anova_test(Petal.Length ~ Species)
pwc = itis %>% tukey_hsd(Petal.Length ~ Species)
pwc = iris %>% tukey_hsd(Petal.Length ~ Species)
View(pwc)
pwc2 <- iris %>% games_howell_test(Petal.Length ~ Species)
View(pwc2)
data("jobsatisfaction")
View(jobsatisfaction)
data("jobsatisfaction", package = "datarium")
library(tidyverse)
library(ggthemes)
library(rstatix)
library(ggpubr)
library(datarium)
data("jobsatisfaction", package = "datarium")
data("iris")
View(iris)
levels(iris$Species)
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) + geom_boxplot()
#there is a difference so can do t test individually - would be 3
iris %>%
group_by(Species) %>%
identify_outliers(Petal.Length)
iris %>%
group_by(Species) %>%
shapiro_test(Petal.Length)
ggqqplot(iris, "Petal.Length", facet.by = "Species")
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Length), var = var(Petal.Length))
iris %>% levene_test(Petal.Length ~ Species)
# if all assumptions are met, this is a regular anova, but homogeneity was violated so:
iris %>% anova_test(Petal.Length ~ Species)
#so use welch test, corrects for different variances
iris %>% welch_anova_test(Petal.Length ~ Species)
# high F: difference between groups is higher than difference within groups
# low p-value, so reject null; this values is really unlikely if between group variance was caused by chance. there is a between group difference
#POST HOC test
pwc = iris %>% tukey_hsd(Petal.Length ~ Species)
pwc2 <- iris %>% games_howell_test(Petal.Length ~ Species)
data("jobsatisfaction", package = "datarium")
install.packages(datarium)
data("jobsatisfaction", package = "datarium")
install.packages(datarium)
data("jobsatisfaction", package = "datarium")
data("jobsatisfaction", package = "datarium")
install.packages(datarium)
install.packages("datarium")
data("jobsatisfaction", package = "datarium")
View(jobsatisfaction)
jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(gender))
jobsatisfaction %>%
group_by(gender, education_level) %>%
summarise(mean = mean(score),
sd = sd(score))
ggqqplot(jobsatisfaction, "score", facet.by = "gender", "education_level")
jobsatisfaction %>%
ggplot(aes(x = gender, y = score, color = education_level)) +
geom_boxplot()
jobsatisfaction %>%
group_by(gender, education_level) %>%
identify_outliers(score)
jobsatisfaction %>%
group_by(gender, education_level) %>%
shapiro_test(score)
jobsatisfaction %>%
levene_test(score ~ gender*education_level)
iris %>% levene_test(Petal.Length ~ Species)
jobsatisfaction %>%
anova_test(score ~ gender*education_level)
jobsatisfaction %>%
levene_test(score ~ gender*education_level)
jobsatisfaction %>%
anova_test(score ~ gender*education_level)
